// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  role    Role     @default(USER)
  authId String      @unique
  email   String      @unique
  order Order[]
  cart Cart[] 
  fav Favourite[]
}



model Order {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  amount Int
  address String
  phone String
  name String
  completed Boolean
  note String?
  buyer User  @relation(fields: [buyerId], references: [id], onDelete: Cascade)
  buyerId   String
  products ProductOrder[]
}

model Favourite {
  id String   @id @default(uuid())
  user User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  list FavProduct[]
  @@unique([userId])
}

model FavProduct{
  id      String @id @default(uuid())
  product Product @relation(fields: [productId], references: [id])
  productId String
  favourite Favourite @relation(fields: [favouriteId], references: [id])
  favouriteId String
}

model Product {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  name String
  type String
  price   Int
  sale  Boolean
  salePrice Int?
  description String
  imgURL String
  orders   ProductOrder[]
  lists  FavProduct[]
}

model ProductOrder {
  id      String @id @default(uuid())
  product Product @relation(fields: [productId], references: [id])
  productId String
  order   Order @relation(fields: [orderId], references: [id])
  orderId String
}


model Cart {
  id      String   @id @default(uuid())
  user    User     @relation( fields: [userId], references: [id], onDelete: Cascade)
  userId  String
  product String[]
}


enum Role {
  USER
  ADMIN
}